group 'org.liquidengine'

import groovy.json.JsonSlurper

// SETUP VERSION
def versionJson = new JsonSlurper().parseText(new File("$project.projectDir/version.json").text)
def versionExt = System.getProperty("VEXT") ?: System.getenv("VEXT") ?: ""
project.version = versionJson.version + (versionExt == "" ? "" : "-" + versionExt)

println("VERSION : " + project.version)

configurations.all {
    resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
idea { module { downloadJavadoc = true; downloadSources = true } }

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

def lwjgl_version = '3.2.4-SNAPSHOT'
def log4j_version = '2.3'
def junit_version = '4.12'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://raw.githubusercontent.com/SpinyOwl/repo/snapshots" }
    maven { url "https://raw.githubusercontent.com/SpinyOwl/repo/releases" }
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j_version

    compile group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true
    runtime group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-windows'
    runtime group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-linux'
    runtime group: 'org.lwjgl', name: 'lwjgl', version: lwjgl_version, changing: true, classifier: 'natives-macos'

    compile group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, changing: true
    compile group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, classifier: 'natives-windows', changing: true
    compile group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, classifier: 'natives-linux', changing: true
    compile group: 'org.lwjgl', name: 'lwjgl-glfw', version: lwjgl_version, classifier: 'natives-macos', changing: true

    testCompile group: 'junit', name: 'junit', version: junit_version
}

// PUBLISH SECTION
configurations {
    deployerJar
}
repositories {
    maven { url 'https://raw.github.com/synergian/wagon-git/releases' }
}
dependencies {
    deployerJar 'ar.com.synergian:wagon-git:0.2.5'
}

task publishArchives {
    doLast {
        def publishUrl = System.getProperty("publishUrl") ?: System.getenv("publishUrl") ?: publishUrl
        def publishUsername = System.getProperty("publishUsername") ?: System.getenv("publishUsername") ?: publishUsername
        def publishPassword = System.getProperty("publishPassword") ?: System.getenv("publishPassword") ?: publishPassword

        println("PUBLISHING TO $publishUrl")
        uploadArchives {
            repositories.mavenDeployer {
                configuration = configurations.deployerJar
                repository(url: publishUrl) {
                    authentication(userName: publishUsername, password: publishPassword)
                }
            }
        }
        uploadArchives.execute()
        println("PUBLISHED TO  $publishUrl")
    }
}

jar {
    exclude("org/liquidengine/legui/demo/**")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    dependsOn classes
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadocJar.dependsOn javadoc
publishArchives.dependsOn jar
publishArchives.dependsOn sourcesJar
publishArchives.dependsOn javadocJar

artifacts {
    archives sourcesJar
    archives javadocJar
}
